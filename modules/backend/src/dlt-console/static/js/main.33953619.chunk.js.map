{"version":3,"sources":["Components/Dashboard/Dashboard.js","Components/Launch/LaunchLocust.js","Components/Tasks/Tasks.js","Components/Settings/Settings.js","Components/Manage/Locust/Locust.js","Components/Manage/Manage.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","props","getItems","a","setState","Items","isLoading","API","get","data","length","noData","response","error","handleApiError","alert","state","modal","modalTitle","modalText","this","welcome","className","Modal","isOpen","ModalHeader","toggle","ModalBody","ModalFooter","Button","color","onClick","closeModal","tableBody","ref","map","item","key","engine_type","charAt","toUpperCase","slice","description","started","engine_status","to","pathname","icon","faArrowAltCircleRight","size","Table","borderless","responsive","Spinner","React","Component","LaunchLocust","launchLocust","values","formValues","form","current","reportValidity","fargateTaskCount","fargateTaskServiceLimit","customLocustFile","putLocustFile","payload","numMasterNodes","parseInt","masterNodeVcpu","masterNodeMemory","numSlaveNodes","slaveNodeVcpu","slaveNodeMemory","locustFileName","customLocustFileName","locustFileSelection","post","body","goHome","message","config","url","fargatePricing","fargateVcpuPrice","parseFloat","vcpu","fargateMemoryPrice","memory","calculateFargatePricing","getLocustFiles","Storage","list","level","download","file","split","put","customLocustFileBody","getLocustFileBody","runningTasks","refreshPricing","fargateVcpuSimCost","fargateMemorySimCost","fargateSimTotalCost","vCpuOptions","label","value","id","fargateRunTimeHours","masterMemoryOptions","slaveMemoryOptions","locustFiles","locustFile","createRef","handleInputChange","bind","setFormValue","handleLocustFileSelection","handleLocustFile","handleLocustFileBody","openInfoModal","handleTaskLimitChanges","event","history","push","taskCount","masterVcpu","find","x","slaveVcpu","masterMemory","slaveMemory","vCpuEstimateSim","memoryEstimateSim","totalCostSim","initialMemoryOptions","target","name","uuidv4","newValue","index","toString","err","error_text","href","rel","faExternalLinkAlt","heading","v","createLocustForm","Row","Col","xs","FormGroup","Label","for","Input","type","defaultValue","readOnly","required","FormText","onChange","i","mode","theme","showGutter","highlightActiveLine","width","height","Body","setOptions","showLineNumbers","tabSize","useSoftTabs","wrapBehavioursEnabled","autoScrollEditorIntoView","showPrintMargin","editorProps","$blockScrolling","Infinity","faInfoCircle","sm","bsSize","onSubmit","e","preventDefault","Tasks","getTasks","tasks","engine_name","taskStatus","refresh","engineName","provisioning","pending","running","ecs_dashboard","awsConfig","load_testing_name","prevState","prevProps","task","lastStatus","Settings","getEngine","sendTaskCount","info","infoText","engineAlbAddress","engine_alb_address","toggleInfo","settings","last_updated","ManageLocust","deleteLocust","del","confirmDelete","manageLocustForm","withRouter","Manage","match","params","manageForm","Amplify","configure","loginTheme","sectionFooterSecondaryContent","AmplifyTheme","display","App","noMatch","signOut","toggleNavbar","collapsed","location","Auth","window","reload","Navbar","dark","fixed","expand","NavbarBrand","faAws","NavbarToggler","Collapse","navbar","Nav","NavItem","faBars","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","faPlusSquare","DropdownMenu","right","DropdownItem","faSignOutAlt","path","exact","component","withAuthenticator","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33953619.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Table,\r\n    Spinner,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { API } from 'aws-amplify';\r\n\r\n//declare var awsConfig;\r\nclass Dashboard extends React.Component {\r\n    intervalID;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Items: [],\r\n            isLoading: true,\r\n            noData: false,\r\n            modal: false,\r\n            modalTitle: null,\r\n            modalText: null,\r\n        }\r\n    };\r\n\r\n    getItems = async () => {\r\n        this.setState({ Items: [], isLoading: true });\r\n        try {\r\n            const data = await API.get('dlts', '/engines');\r\n            this.setState({ Items: data.Items, isLoading: false });\r\n            if (data.Items.length === 0) {\r\n                this.setState({ noData: true });\r\n            }\r\n            else {\r\n                this.setState({ noData: false });\r\n            }\r\n            //this.intervalID = setTimeout(this.getItems.bind(this), 30000);\r\n        } catch (err) {\r\n            if ('response' in err && typeof err.response !== 'undefined') {\r\n                if (err.response.data.error === 'duplicate_engine') {\r\n                    this.handleApiError(err)\r\n                }\r\n                else {\r\n                    alert(err);\r\n                }\r\n            }\r\n            else {\r\n                alert(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        /*\r\n          stop getData() from continuing to run even\r\n          after unmounting this component. Notice we are calling\r\n          'clearTimeout()` here rather than `clearInterval()` as\r\n          in the previous example.\r\n        */\r\n        //clearTimeout(this.intervalID);\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { Items } = this.state;\r\n\r\n        const welcome = (\r\n            <div className=\"welcome\">\r\n                <h2>To get started select <strong>Launch Engine</strong> from the top menu.</h2>\r\n            </div>\r\n        )\r\n\r\n        const modal = (\r\n            <Modal isOpen={this.state.modal}>\r\n                <ModalHeader toggle={this.toggle}>{this.state.modalTitle}</ModalHeader>\r\n                <ModalBody>\r\n                    {this.state.modalText}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color='secondary' onClick={this.closeModal}>Close</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n\r\n        const tableBody = (\r\n            <tbody ref={this.tableBody} >\r\n                {Items.map(item => (\r\n                    <tr key={item.engine_type}>\r\n                        <td >{item.engine_type.charAt(0).toUpperCase() + item.engine_type.slice(1)}</td>\r\n                        <td >{item.description}</td>\r\n                        <td>{item.started}</td>\r\n                        <td>{item.engine_status}</td>\r\n                        <td className=\"td-center\">\r\n                            <Link to={{\r\n                                pathname: \"/manage/\" + item.engine_type,\r\n                                state: { engine_type: item.engine_type }\r\n                            }}\r\n                            >\r\n                                <FontAwesomeIcon icon={faArrowAltCircleRight} size=\"lg\" />\r\n                            </Link>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"box heading-box\">\r\n                    <h1>Dashboard</h1>\r\n                    <Button onClick={this.getItems} size=\"sm\">Refresh</Button>\r\n                </div>\r\n                {modal}\r\n                <div className=\"box\">\r\n                    <h1>Engines</h1>\r\n                    <Table className=\"dashboard\" borderless responsive >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Type</th>\r\n                                <th>Description</th>\r\n                                <th>Started (UTC)</th>\r\n                                <th>Status</th>\r\n                                <th className=\"td-center\">Manage</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {tableBody}\r\n                    </Table>\r\n                    {this.state.isLoading ? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : <div></div>}\r\n                </div>\r\n                {this.state.noData ? welcome : <div></div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { API } from 'aws-amplify';\r\nimport { Storage } from 'aws-amplify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport 'brace';\r\nimport AceEditor from \"react-ace\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n    Col,\r\n    Row,\r\n    Button,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n    Spinner,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n} from 'reactstrap';\r\nimport 'brace/theme/github';\r\n\r\nclass LaunchLocust extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            runningTasks: false,\r\n            modal: false,\r\n            modalTitle: null,\r\n            modalText: null,\r\n            refreshPricing: false,\r\n            fargateVcpuPrice: null,\r\n            fargateMemoryPrice: null,\r\n            fargateVcpuSimCost: null,\r\n            fargateMemorySimCost: null,\r\n            fargateSimTotalCost: null,\r\n            formValues: {\r\n                vCpuOptions: [\r\n                    { label: '0.25', value: '256', id: 1 },\r\n                    { label: '0.5', value: '512', id: 2 },\r\n                    { label: '1', value: '1024', id: 3 },\r\n                    { label: '2', value: '2048', id: 4 },\r\n                    { label: '4', value: '4096', id: 5 },\r\n                ],\r\n                fargateTaskServiceLimit: 100,\r\n                fargateTaskCount: 0,\r\n                fargateRunTimeHours: 24,\r\n                masterMemoryOptions: [],\r\n                slaveMemoryOptions: [],\r\n                numMasterNodes: '1',\r\n                masterNodeVcpu: '512',\r\n                masterNodeMemory: '2048',\r\n                numSlaveNodes: '1',\r\n                slaveNodeVcpu: '512',\r\n                slaveNodeMemory: '2048',\r\n                locustFiles: [],\r\n                locustFile: '',\r\n                locustFileSelection: '',\r\n                locustFileName: '',\r\n                customLocustFile: false,\r\n                customLocustFileBody: '',\r\n                customLocustFileName: ''\r\n            }\r\n        }\r\n\r\n        this.form = React.createRef();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.setFormValue = this.setFormValue.bind(this);\r\n        this.masterMemoryOptions = this.masterMemoryOptions.bind(this);\r\n        this.slaveMemoryOptions = this.slaveMemoryOptions.bind(this);\r\n        this.handleLocustFileSelection = this.handleLocustFileSelection.bind(this);\r\n        this.handleLocustFile = this.handleLocustFile.bind(this);\r\n        this.handleLocustFileSelection = this.handleLocustFileSelection.bind(this);\r\n        this.handleLocustFileBody = this.handleLocustFileBody.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.openInfoModal = this.openInfoModal.bind(this);\r\n        this.handleTaskLimitChanges = this.handleTaskLimitChanges.bind(this);\r\n        this.getLocustFiles = this.getLocustFiles.bind(this);\r\n        this.goHome = this.goHome.bind(this);\r\n    }\r\n\r\n    launchLocust = async () => {\r\n        const values = this.state.formValues;\r\n\r\n        if (!this.form.current.reportValidity()) {\r\n            return false;\r\n        }\r\n\r\n        if (this.state.formValues.fargateTaskCount > this.state.formValues.fargateTaskServiceLimit) {\r\n            this.setState({\r\n                modal: true, modalTitle: 'Task count', modalText: 'Task count: ' + this.state.formValues.fargateTaskCount + \" is greater than the AWS accounts service limit of \" + this.state.formValues.fargateTaskServiceLimit\r\n            });\r\n            return false;\r\n        }\r\n        this.setState({ isLoading: true })\r\n\r\n        if (values.customLocustFile === true) {\r\n            this.putLocustFile()\r\n        }\r\n\r\n        try {\r\n\r\n            let payload = {\r\n                numMasterNodes: parseInt(values.numMasterNodes),\r\n                masterNodeVcpu: parseInt(values.masterNodeVcpu),\r\n                masterNodeMemory: parseInt(values.masterNodeMemory),\r\n                numSlaveNodes: parseInt(values.numSlaveNodes),\r\n                slaveNodeVcpu: parseInt(values.slaveNodeVcpu),\r\n                slaveNodeMemory: parseInt(values.slaveNodeMemory),\r\n                locustFileName: values.customLocustFile ? \"/scenarios/locust/custom/\" + values.customLocustFileName : \"/\" + values.locustFileSelection,\r\n                customLocustFile: values.customLocustFile\r\n            };\r\n\r\n            await API.post('dlts', '/engine/launch/locust', { body: payload });\r\n            this.setState({ isLoading: false })\r\n            this.goHome()\r\n        } catch (err) {\r\n            if ('response' in err && typeof err.response !== 'undefined') {\r\n                if (err.response.data.error === 'duplicate_engine') {\r\n                    this.handleApiError(err)\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        modal: true, modalTitle: err.message, modalText: err.message + \"- Request to \" + err.config.url + \" failed\"\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.setState({\r\n                    modal: true, modalTitle: err.message, modalText: err.message + \"- Request to \" + err.config.url + \" failed\"\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    fargatePricing = async () => {\r\n        this.setState({ isLoading: true })\r\n        try {\r\n            const data = await API.get('dlts', '/pricing/fargate');\r\n            this.setState({\r\n                fargateVcpuPrice: parseFloat(data.vcpu), fargateMemoryPrice: parseFloat(data.memory)\r\n            });\r\n            this.calculateFargatePricing()\r\n            this.setState({ isLoading: false })\r\n        } catch (err) {\r\n            this.setState({\r\n                modal: true, modalTitle: 'Pricing error', modalText: 'Failed to get Fargate pricing information'\r\n            });\r\n        }\r\n    };\r\n\r\n    handleTaskLimitChanges(event) {\r\n\r\n    }\r\n\r\n    goHome() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    calculateFargatePricing() {\r\n        const values = this.state\r\n        let taskCount = parseInt(values.formValues.numMasterNodes) + parseInt(values.formValues.numSlaveNodes)\r\n        let masterVcpu = parseFloat(values.formValues.vCpuOptions.find(x => x.value === this.state.formValues.masterNodeVcpu).label)\r\n        let slaveVcpu = parseFloat(values.formValues.vCpuOptions.find(x => x.value === this.state.formValues.slaveNodeVcpu).label)\r\n        let masterMemory = parseFloat(values.formValues.masterMemoryOptions.find(x => x.value === this.state.formValues.masterNodeMemory).label)\r\n        let slaveMemory = parseFloat(values.formValues.slaveMemoryOptions.find(x => x.value === this.state.formValues.slaveNodeMemory).label)\r\n        let vCpuEstimateSim = (parseInt(values.formValues.numMasterNodes) + parseInt(values.formValues.numSlaveNodes)) * (masterVcpu + slaveVcpu) * values.fargateVcpuPrice * values.formValues.fargateRunTimeHours\r\n        let memoryEstimateSim = (parseInt(values.formValues.numMasterNodes) + parseInt(values.formValues.numSlaveNodes)) * (masterMemory + slaveMemory) * values.fargateMemoryPrice * values.formValues.fargateRunTimeHours\r\n        let totalCostSim = vCpuEstimateSim + memoryEstimateSim\r\n        values['fargateVcpuSimCost'] = vCpuEstimateSim\r\n        values['fargateMemorySimCost'] = memoryEstimateSim\r\n        values['fargateSimTotalCost'] = totalCostSim\r\n        values.formValues['fargateTaskCount'] = taskCount\r\n        this.setState({\r\n            values\r\n        });\r\n\r\n    }\r\n\r\n    getLocustFiles = async () => {\r\n        const formValues = this.state.formValues;\r\n        this.setState({ isLoading: true });\r\n        try {\r\n            const data = await Storage.list('scenarios/locust', { level: 'public' })\r\n            if (data.length === 0) {\r\n                this.setState({ isLoading: false, noData: true });\r\n            }\r\n            else {\r\n                formValues['locustFiles'] = data\r\n                formValues['locustFileSelection'] = data[0].key\r\n                formValues['customLocustFile'] = false\r\n                try {\r\n                    const file = await Storage.get(data[0].key, { level: 'public', download: true })\r\n                    formValues['locustFile'] = file\r\n                } catch (err) {\r\n                    alert(err)\r\n                }\r\n                formValues['locustFileName'] = (formValues.locustFileSelection).split(\"/\")[((formValues.locustFileSelection).split(\"/\").length) - 1]\r\n                this.setState({ formValues: formValues });\r\n            }\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    putLocustFile = async () => {\r\n        const formValues = this.state.formValues;\r\n        try {\r\n            await Storage.put('scenarios/locust/custom/' + formValues.customLocustFileName, formValues.customLocustFileBody, { level: 'public' })\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    getLocustFileBody = async (key) => {\r\n        const formValues = this.state.formValues;\r\n        try {\r\n            const file = await Storage.get(key, { level: 'public', download: true })\r\n            formValues['locustFile'] = file\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n        this.setState({ formValues: formValues });\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        this.initialMemoryOptions();\r\n        this.getLocustFiles()\r\n        this.fargatePricing();\r\n    };\r\n\r\n    setFormValue(key, value) {\r\n        const formValues = this.state.formValues;\r\n        formValues[key] = value;\r\n        this.setState({ formValues });\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setFormValue(name, value);\r\n        if (name === \"masterNodeMemory\" || name === \"slaveNodeMemory\" || name === \"numSlaveNodes\" || name === \"fargateRunTimeHours\") {\r\n            this.calculateFargatePricing();\r\n        }\r\n    }\r\n\r\n    handleLocustFile(event) {\r\n        const formValues = this.state.formValues;\r\n        formValues['locustFileName'] = 'woop woop'\r\n        this.setState({ formValues });\r\n    }\r\n\r\n    handleLocustFileSelection(event) {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        const formValues = this.state.formValues\r\n        this.setFormValue(name, value);\r\n        if (value === 'Custom' && name === 'locustFileSelection') {\r\n            formValues['locustFile'] = null\r\n            formValues['customLocustFile'] = true\r\n            formValues['customLocustFileName'] = 'custom_locust_file_' + uuidv4() + '.py'\r\n            this.setState({ formValues: formValues });\r\n        }\r\n        else if (name === 'locustFileName') {\r\n            formValues['customLocustFile'] = true\r\n            formValues['customLocustFileName'] = value\r\n            this.setState({ formValues: formValues });\r\n        }\r\n        else {\r\n            formValues['locustFile'] = null\r\n            formValues['customLocustFile'] = false\r\n            formValues['customLocustFileBody'] = ''\r\n            formValues['locustFileName'] = (formValues.locustFileSelection).split(\"/\")[((formValues.locustFileSelection).split(\"/\").length) - 1]\r\n            this.setState({ formValues: formValues });\r\n            this.getLocustFileBody(value)\r\n        }\r\n    }\r\n\r\n    handleLocustFileBody(newValue) {\r\n        const formValues = this.state.formValues\r\n        formValues['customLocustFileBody'] = newValue\r\n        this.setState({ formValues: formValues });\r\n    }\r\n\r\n    initialMemoryOptions() {\r\n        const formValues = this.state.formValues;\r\n        switch (formValues.masterNodeVcpu) {\r\n            case '256':\r\n                formValues['masterMemoryOptions'] = [\r\n                    { value: '0.5', id: 1 },\r\n                    { value: '1', id: 2 },\r\n                    { value: '2', id: 3 }\r\n                ]\r\n                this.setState({ formValues });\r\n                break;\r\n            case '512':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                for (let index = 1; index <= 4; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            case '1024':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                for (let index = 2; index <= 8; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            case '2048':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                for (let index = 4; index <= 16; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            case '4096':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                for (let index = 8; index <= 30; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        switch (formValues.slaveNodeVcpu) {\r\n            case '256':\r\n                formValues['slaveMemoryOptions'] = [\r\n                    { value: '0.5', id: 1 },\r\n                    { value: '1', id: 2 },\r\n                    { value: '2', id: 3 }\r\n                ]\r\n                this.setState({ formValues });\r\n                break;\r\n            case '512':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                for (let index = 1; index <= 4; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            case '1024':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                for (let index = 2; index <= 8; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            case '2048':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                for (let index = 4; index <= 16; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            case '4096':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                for (let index = 8; index <= 30; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    masterMemoryOptions(event) {\r\n        this.handleInputChange(event);\r\n        const value = event.target.value;\r\n        const formValues = this.state.formValues;\r\n        switch (value) {\r\n            case '256':\r\n                formValues['masterMemoryOptions'] = [\r\n                    { label: '0.5', value: (0.5 * 1024).toString(), id: 1 },\r\n                    { label: '1', value: (1 * 1024).toString(), id: 2 },\r\n                    { label: '2', value: (2 * 1024).toString(), id: 3 }\r\n                ]\r\n                formValues['masterNodeMemory'] = (1 * 1024).toString()\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '512':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                formValues['masterNodeMemory'] = (2 * 1024).toString()\r\n                for (let index = 1; index <= 4; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '1024':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                formValues['masterNodeMemory'] = (2 * 1024).toString()\r\n                for (let index = 2; index <= 8; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '2048':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                formValues['masterNodeMemory'] = (4 * 1024).toString()\r\n                for (let index = 4; index <= 16; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '4096':\r\n                formValues['masterMemoryOptions'].length = 0\r\n                formValues['masterNodeMemory'] = (8 * 1024).toString()\r\n                for (let index = 8; index <= 30; index++) {\r\n                    formValues['masterMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    slaveMemoryOptions(event) {\r\n        this.handleInputChange(event);\r\n        const value = event.target.value;\r\n        const formValues = this.state.formValues;\r\n        switch (value) {\r\n            case '256':\r\n                formValues['slaveMemoryOptions'] = [\r\n                    { label: '0.5', value: (0.5 * 1024).toString(), id: 1 },\r\n                    { label: '1', value: (1 * 1024).toString(), id: 2 },\r\n                    { label: '2', value: (2 * 1024).toString(), id: 3 }\r\n                ]\r\n                formValues['slaveNodeMemory'] = (1 * 1024).toString()\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '512':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                formValues['slaveNodeMemory'] = (1 * 1024).toString()\r\n                for (let index = 1; index <= 4; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '1024':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                formValues['slaveNodeMemory'] = (2 * 1024).toString()\r\n                for (let index = 2; index <= 8; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '2048':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                formValues['slaveNodeMemory'] = (4 * 1024).toString()\r\n                for (let index = 4; index <= 16; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            case '4096':\r\n                formValues['slaveMemoryOptions'].length = 0\r\n                formValues['slaveNodeMemory'] = (8 * 1024).toString()\r\n                for (let index = 8; index <= 30; index++) {\r\n                    formValues['slaveMemoryOptions'].push({ label: index.toString(), value: (index * 1024).toString(), id: index })\r\n                }\r\n                this.setState({ formValues });\r\n                this.calculateFargatePricing();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleApiError(err) {\r\n        this.setState({\r\n            modal: true, modalTitle: err.message, modalText: err.response.data.error_text + \" at \" + err.response.data.data.Items[0].started + \". Please go back to the dashboard and manage the already existing engine\"\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modal: false, modalTitle: null, modalText: null, isLoading: false\r\n        });\r\n    }\r\n\r\n    openInfoModal() {\r\n        this.setState({\r\n            modal: true, modalTitle: 'Pricing info', modalText: <p>Pricing info is taken from the pricing API for Fargate tasks spun up in Sydney provided by AWS and the method for calculation used is provided <a className=\"text-link\" onClick={this.closeModal} target=\"_blank\" href=\"https://aws.amazon.com/fargate/pricing/\" rel=\"noopener noreferrer\"> here <FontAwesomeIcon size=\"sm\" icon={faExternalLinkAlt} /></a>. Does not include egress data charges</p>\r\n        });\r\n    }\r\n    render() {\r\n\r\n        const heading = (\r\n            <div className=\"box cheading-box\">\r\n                <h1>Launch Locust engine</h1>\r\n                <Button\r\n                    size=\"sm\"\r\n                    onClick={this.launchLocust}\r\n                >Launch</Button>\r\n            </div>\r\n        )\r\n\r\n        const vCpuOptions = (\r\n            this.state.formValues.vCpuOptions.map(v => (\r\n                <option key={v.id} label={v.label} value={v.value}>{v.label}</option>\r\n            ))\r\n        )\r\n\r\n        const masterMemoryOptions = (\r\n            this.state.formValues.masterMemoryOptions.map(v => (\r\n                <option key={v.id} label={v.label} value={v.value}></option>\r\n            ))\r\n        )\r\n\r\n        const slaveMemoryOptions = (\r\n            this.state.formValues.slaveMemoryOptions.map(v => (\r\n                <option key={v.id} label={v.label} value={v.value}>{v.label}</option>\r\n            ))\r\n        )\r\n\r\n        const modal = (\r\n            <Modal isOpen={this.state.modal}>\r\n                <ModalHeader toggle={this.toggle}>{this.state.modalTitle}</ModalHeader>\r\n                <ModalBody>\r\n                    {this.state.modalText}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color='secondary' onClick={this.closeModal}>Close</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n\r\n        const createLocustForm = (\r\n            <div>\r\n                <Row>\r\n                    <Col xs=\"2\">\r\n                        <div className=\"box create-box\">\r\n                            <h3>Settings</h3>\r\n                            <FormGroup>\r\n                                <Label for=\"numOfMasterNodes\"># of master nodes</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"numOfMasterNodes\"\r\n                                    id=\"numOfMasterNodes\"\r\n                                    defaultValue={this.state.formValues.numMasterNodes}\r\n                                    readOnly={true}\r\n                                    required\r\n                                />\r\n                                <FormText color=\"muted\">\r\n                                    The number of master nodes for the cluster. This will default to 1\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"masterNodeVcpu\">Master node vCPU</Label>\r\n                                <Input type=\"select\" value={this.state.formValues.masterNodeVcpu} onChange={this.masterMemoryOptions} name=\"masterNodeVcpu\" id=\"masterNodeVcpu\" >\r\n                                    {vCpuOptions}\r\n                                </Input>\r\n                                <FormText color=\"muted\">\r\n                                    The amount of vCPU to assign to the master node tasks\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"masterNodeMemory\">Master node memory</Label>\r\n                                <Input type=\"select\" value={this.state.formValues.masterNodeMemory} onChange={this.handleInputChange} name=\"masterNodeMemory\" id=\"masterNodeMemory\" >\r\n                                    {masterMemoryOptions}\r\n                                </Input>\r\n                                <FormText color=\"muted\">\r\n                                    The amount of memory in GB to assign to the master node tasks\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"numSlaveNodes\"># of slave nodes</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"numSlaveNodes\"\r\n                                    id=\"numSlaveNodes\"\r\n                                    defaultValue=\"1\"\r\n                                    onChange={this.handleInputChange}\r\n                                    required\r\n                                />\r\n                                <FormText color=\"muted\">\r\n                                    The number of slaves to connect to the master node for distributed testing. The total number of master nodes + slave nodes should fit within the accounts service limits for fargate tasks\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"slaveNodeVcpu\">Slave node vCPU</Label>\r\n                                <Input type=\"select\" value={this.state.formValues.slaveNodeVcpu} onChange={this.slaveMemoryOptions} name=\"slaveNodeVcpu\" id=\"slaveNodeVcpu\" >\r\n                                    {vCpuOptions}\r\n                                </Input>\r\n                                <FormText color=\"muted\">\r\n                                    The amount of vCPU to assign to the slave node tasks\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"slaveNodeMemory\">Slave node memory</Label>\r\n                                <Input type=\"select\" value={this.state.formValues.slaveNodeMemory} onChange={this.handleInputChange} name=\"slaveNodeMemory\" id=\"slaveNodeMemory\" >\r\n                                    {slaveMemoryOptions}\r\n                                </Input>\r\n                                <FormText color=\"muted\">\r\n                                    The amount of memory in GB to assign to the slave node tasks\r\n                                </FormText>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs=\"10\">\r\n                        <div className=\"box create-box\">\r\n                            <FormGroup>\r\n                                <Label for=\"locustFileSelection\">Locust file selection</Label>\r\n                                <Input type=\"select\" onChange={this.handleLocustFileSelection} name=\"locustFileSelection\" id=\"locustFileSelection\" >\r\n                                    {this.state.formValues.locustFiles.length > 0 ? this.state.formValues.locustFiles.map((v, i) => (\r\n                                        <option key={i} label={v.key} value={v.key}>{v.key}</option>)) : null}\r\n                                    <option key=\"999\" label=\"Custom\" value=\"Custom\">Custom</option>\r\n                                </Input>\r\n                                <FormText color=\"muted\">\r\n                                    Select a default locust file that contains a predefined test scenario\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"locustFile\">Locust file</Label>\r\n                                <AceEditor\r\n                                    mode=\"python\"\r\n                                    theme=\"github\"\r\n                                    showGutter={true}\r\n                                    highlightActiveLine={true}\r\n                                    name=\"locustFile\"\r\n                                    width=\"inherit\"\r\n                                    height=\"500px\"\r\n                                    onChange={this.handleLocustFileBody}\r\n                                    readOnly={this.state.formValues.customLocustFile === true ? false : true}\r\n                                    value={this.state.formValues.locustFile !== null ? this.state.formValues.locustFile.Body : this.state.formValues.customLocustFileBody}\r\n                                    required\r\n                                    //onChange={this.handleLocustFile}\r\n                                    setOptions={{\r\n                                        showLineNumbers: true,\r\n                                        tabSize: 4,\r\n                                        useSoftTabs: true,\r\n                                        wrapBehavioursEnabled: true,\r\n                                        autoScrollEditorIntoView: true,\r\n                                        showPrintMargin: false,\r\n                                    }}\r\n                                    editorProps={{\r\n                                        $blockScrolling: Infinity\r\n                                    }}\r\n                                />\r\n                                <FormText color=\"muted\">\r\n                                    A valid Python Locust file https://docs.locust.io/en/stable/quickstart.html\r\n                                </FormText>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"locustFileName\">Locust file name</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"locustFileName\"\r\n                                    id=\"locustFileName\"\r\n                                    readOnly={this.state.formValues.customLocustFile === true ? false : true}\r\n                                    onChange={this.handleLocustFileSelection}\r\n                                    value={this.state.formValues.customLocustFile === true ? this.state.formValues.customLocustFileName : this.state.formValues.locustFileName}\r\n                                    required\r\n                                />\r\n                                <FormText color=\"muted\">\r\n                                    If custom locust file input a name to save the file as. Otherwise it's just the name of the file\r\n                                </FormText>\r\n                                {this.state.formValues.customLocustFile === true ? <FormText color=\"red\">\r\n                                    If the file name already exists the file will be overwritten. In addition remember to back up your custom file if you wish to keep it because the custom file is stored in the consoles S3 bucket and will be destroyed alongside the solution when it's torn down.\r\n                                </FormText> : null}\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"box\">\r\n                    <h3>Estimated cost:</h3>\r\n                    <Button id=\"info\" onClick={this.openInfoModal} color=\"link\"><FontAwesomeIcon id=\"icon\" icon={faInfoCircle} /> Info</Button>\r\n                    <Row>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result form-inline\">\r\n                                <Label for=\"fargateTaskServiceLimit\">Account Fargate task limit:</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"fargateTaskServiceLimit\"\r\n                                    id=\"fargateTaskServiceLimit\"\r\n                                    defaultValue={this.state.formValues.fargateTaskServiceLimit}\r\n                                    onChange={this.handleInputChange}\r\n                                    bsSize=\"sm\"\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result form-inline\">\r\n                                <Label for=\"fargateRunTimeHours\">Simulated runtime (Hours):</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"fargateRunTimeHours\"\r\n                                    id=\"fargateRunTimeHours\"\r\n                                    defaultValue={this.state.formValues.fargateRunTimeHours}\r\n                                    onChange={this.handleInputChange}\r\n                                    bsSize=\"sm\"\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result\">\r\n                                <b>vCPU cost (USD):</b><span>${this.state.fargateVcpuPrice}</span>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result\">\r\n                                <b>Memory cost (USD):</b><span>${this.state.fargateMemoryPrice}</span>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result\">\r\n                                <b>Task acount:</b><span>{this.state.formValues.fargateTaskCount} out of {this.state.formValues.fargateTaskServiceLimit}</span>\r\n                                {this.state.formValues.fargateTaskCount > this.state.formValues.fargateTaskServiceLimit ? <FormText color=\"red\">\r\n                                    Number of tasks exceeds service limits for account\r\n                                </FormText> : null}\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result\">\r\n                                <b>Esimated vCPU cost:</b><span>${this.state.fargateVcpuSimCost}</span>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result\">\r\n                                <b>Esimated memory cost:</b><span>${this.state.fargateMemorySimCost}</span>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"price result\">\r\n                                <b>Estimated total simulated cost:</b><span>${this.state.fargateSimTotalCost}</span>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <form ref={this.form} onSubmit={e => e.preventDefault()}>\r\n                    {modal}\r\n                    {this.state.isLoading ? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : heading}\r\n                    <div>\r\n                        {this.state.isLoading ? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : createLocustForm}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LaunchLocust;\r\n","import React from 'react';\r\nimport {\r\n    Col,\r\n    Row,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { API } from 'aws-amplify';\r\n//import awsConfig from '../../aws_config'\r\ndeclare var awsConfig;\r\n\r\n\r\nclass Tasks extends React.Component {\r\n    intervalID;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            refresh: false,\r\n            engine_name: this.props.engineName,\r\n            taskCount: this.props.taskCount,\r\n            provisioning: 0,\r\n            pending: 0,\r\n            running: 0,\r\n            tasks: [],\r\n            ecs_dashboard: awsConfig.ecs_dashboard + awsConfig.load_testing_name + \"-\" + this.props.engineName\r\n        }\r\n\r\n        this.getTasks = this.getTasks.bind(this);\r\n        this.taskStatus = this.taskStatus.bind(this);\r\n    };\r\n\r\n    getTasks = async () => {\r\n        this.setState({ tasks: [], isLoading: true });\r\n        try {\r\n            const data = await API.get('dlts', '/engine/' + this.state.engine_name + '/tasks');\r\n            if (data.length === 0) {\r\n                this.setState({ isLoading: false, noData: true });\r\n            }\r\n            else {\r\n                this.setState({ isLoading: false, tasks: data.tasks });\r\n            }\r\n            //this.intervalID = setTimeout(this.getItems.bind(this), 30000);\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n        this.taskStatus()\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getTasks()\r\n    };\r\n\r\n    componentDidUpdate(prevState, prevProps) {\r\n        if (this.props.refresh !== prevState.refresh) {\r\n            this.getTasks()\r\n            this.setState({ 'refresh': !this.props.refresh })\r\n        }\r\n        else if (this.props.taskCount !== prevState.taskCount) {\r\n            this.setState({ taskCount: this.props.taskCount })\r\n        }\r\n    }\r\n\r\n    taskStatus() {\r\n        const tasks = this.state.tasks\r\n        let provisioning = 0;\r\n        let pending = 0;\r\n        let running = 0;\r\n\r\n        for (let task in tasks) {\r\n            // eslint-disable-next-line default-case\r\n            switch (tasks[task].lastStatus) {\r\n                case 'PROVISIONING':\r\n                    ++provisioning\r\n                    break;\r\n                case 'PENDING':\r\n                    ++pending\r\n                    break;\r\n                case 'RUNNING':\r\n                    ++running\r\n                    break;\r\n            }\r\n        }\r\n        this.setState({ provisioning: provisioning, pending: pending, running: running })\r\n    }\r\n\r\n    render() {\r\n\r\n        const tasks = (\r\n            <div className=\"box\">\r\n                <h3>Tasks Status:</h3>\r\n                <span className=\"console\">\r\n                    Details for the running tasks can be viewed in the <a className=\"text-link\"\r\n                        href={this.state.ecs_dashboard}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\">\r\n                        Amazon ECS Console <FontAwesomeIcon size=\"sm\" icon={faExternalLinkAlt} />\r\n                    </a>\r\n                </span>\r\n\r\n                <Row>\r\n                    <Col sm=\"3\">\r\n                        <div className=\"result\">\r\n                            <b>Task Count:</b><span>{this.state.tasks.length} of {this.state.taskCount}</span>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <div className=\"result\">\r\n                            <b>Provisioning Count:</b><span>{this.state.provisioning}</span>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <div className=\"result\">\r\n                            <b>Pending Count:</b><span>{this.state.pending}</span>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm=\"3\">\r\n                        <div className=\"result\">\r\n                            <b>Running Count:</b><span>{this.state.running}</span>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : tasks}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Tasks;\r\n","import React from 'react';\r\nimport {\r\n    Col,\r\n    Row,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport AceEditor from \"react-ace\";\r\nimport 'brace/theme/github';\r\nimport { API, Storage } from 'aws-amplify';\r\n//import awsConfig from '../../aws_config'\r\ndeclare var awsConfig;\r\n\r\n\r\nclass Settings extends React.Component {\r\n    intervalID;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Items: [],\r\n            isLoading: false,\r\n            refresh: false,\r\n            info: false,\r\n            infoText: null,\r\n            engine_name: this.props.engineName,\r\n            engineAlbAddress: \"http://\" + awsConfig.engine_alb_address,\r\n            locustFile: null\r\n        }\r\n        this.toggleInfo = this.toggleInfo.bind(this);\r\n        this.getLocustFileBody = this.getLocustFileBody.bind(this);\r\n    };\r\n\r\n    getEngine = async () => {\r\n        this.setState({ isLoading: true });\r\n        try {\r\n            const data = await API.get('dlts', '/engine/' + this.state.engine_name);\r\n            this.setState({ Items: data.Items, isLoading: false });\r\n            if (data.Items.length === 0) {\r\n                this.setState({ noData: true });\r\n            }\r\n            this.setState({ isLoading: false });\r\n            this.sendTaskCount()\r\n            this.getLocustFileBody(data.Items[0].locustFileName)\r\n            //this.intervalID = setTimeout(this.getItems.bind(this), 30000);\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    getLocustFileBody = async (key) => {\r\n        const formValues = this.state;\r\n        try {\r\n            const file = await Storage.get(key.slice(1), { level: 'public', download: true })\r\n            formValues['locustFile'] = file\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n        this.setState({ formValues: formValues });\r\n    };\r\n\r\n    toggleInfo() {\r\n        this.setState({\r\n            info: !this.state.info,\r\n            infoText: \"This console only manages the Locust engines resources including the test scenario. Managing the actual locust engine (Starting and stopping load tests) is done via the below management URL\"\r\n\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEngine()\r\n    };\r\n\r\n    sendTaskCount() {\r\n        if (this.state.Items.length > 0) {\r\n            this.props.taskCount((parseInt(this.state.Items[0].numMasterNodes) + parseInt(this.state.Items[0].numSlaveNodes)))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //clearTimeout(this.intervalID);\r\n    };\r\n\r\n    componentDidUpdate(prevState, prevProps) {\r\n        if (this.props.refresh !== prevState.refresh) {\r\n            this.getEngine()\r\n            this.setState({ 'refresh': !this.props.refresh })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { Items } = this.state;\r\n\r\n        const settings = (\r\n\r\n            <div>\r\n                {Items.map(item => (\r\n                    <div key={item.engine_type} className=\"box\">\r\n                        <h3>Settings</h3>\r\n                        <Row>\r\n                            <Col xs=\"6\" sm=\"4\">\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b>Type</b></Col>\r\n                                    <Col sm=\"9\">{this.state.engine_name.charAt(0).toUpperCase() + this.state.engine_name.slice(1)}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b>Description</b></Col>\r\n                                    <Col sm=\"9\">{item.description}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b>Last updated</b></Col>\r\n                                    <Col sm=\"9\">{item.last_updated}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b>Management URL</b></Col>\r\n                                    <Col sm=\"9\"><a className=\"text-link\"\r\n                                        href={this.state.engineAlbAddress}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\">\r\n                                        {this.state.engineAlbAddress} <FontAwesomeIcon size=\"sm\" icon={faExternalLinkAlt} />\r\n                                    </a></Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs=\"6\" sm=\"4\">\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b># of master nodes</b></Col>\r\n                                    <Col sm=\"9\">{item.numMasterNodes}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b>Master node vCPU</b></Col>\r\n                                    <Col sm=\"9\">{item.masterNodeVcpu}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"3\"><b>Master node memory</b></Col>\r\n                                    <Col sm=\"9\">{item.masterNodeMemory}</Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs=\"6\" sm=\"4\">\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"4\"><b># of slave nodes</b></Col>\r\n                                    <Col sm=\"8\">{item.numSlaveNodes}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"4\"><b>Slave node vCPU</b></Col>\r\n                                    <Col sm=\"8\">{item.slaveNodeVcpu}</Col>\r\n                                </Row>\r\n                                <Row className=\"detail\">\r\n                                    <Col sm=\"4\"><b>Slave node memory</b></Col>\r\n                                    <Col sm=\"8\">{item.slaveNodeMemory}</Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"detail\">\r\n                            <Col><b>Locust file</b></Col>\r\n                            <AceEditor\r\n                                mode=\"python\"\r\n                                theme=\"github\"\r\n                                showGutter={true}\r\n                                highlightActiveLine={true}\r\n                                name=\"locustFile\"\r\n                                width=\"100%\"\r\n                                height=\"500px\"\r\n                                readOnly={true}\r\n                                value={this.state.locustFile === null ? '' : this.state.locustFile.Body}\r\n                                setOptions={{\r\n                                    showLineNumbers: true,\r\n                                    tabSize: 4,\r\n                                    useSoftTabs: true,\r\n                                    wrapBehavioursEnabled: true,\r\n                                    autoScrollEditorIntoView: true,\r\n                                    showPrintMargin: false,\r\n                                }}\r\n                                editorProps={{\r\n                                    $blockScrolling: Infinity\r\n                                }}\r\n                            />\r\n                        </Row>\r\n                    </div>\r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                {this.state.isLoading ? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : settings}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Spinner,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from 'reactstrap';\r\nimport { API } from 'aws-amplify';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Tasks from '../../Tasks/Tasks'\r\nimport Settings from '../../Settings/Settings'\r\n//import awsConfig from '../../../aws_config'\r\ndeclare var awsConfig;\r\n\r\n\r\nclass ManageLocust extends React.Component {\r\n    intervalID;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Items: [],\r\n            isLoading: false,\r\n            refresh: false,\r\n            info: false,\r\n            infoText: null,\r\n            noData: true,\r\n            modal: false,\r\n            modalTitle: null,\r\n            modalText: null,\r\n            engine_name: this.props.engineName\r\n        }\r\n        this.form = React.createRef();\r\n        this.confirmDelete = this.confirmDelete.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.toggleInfo = this.toggleInfo.bind(this);\r\n        this.deleteLocust = this.deleteLocust.bind(this);\r\n        this.taskCount = this.taskCount.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    };\r\n\r\n    deleteLocust = async () => {\r\n        this.setState({ isLoading: true })\r\n        try {\r\n            await API.del('dlts', '/engine/locust');\r\n            this.setState({ isLoading: false })\r\n            this.props.history.push('/')\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n    };\r\n\r\n    toggleInfo() {\r\n        this.setState({\r\n            info: !this.state.info,\r\n            infoText: \"This console only manages the Locust engines resources including the test scenario. Managing the actual locust engine (Starting and stopping load tests) is done via the below management URL\"\r\n        });\r\n    }\r\n\r\n    refresh() {\r\n        this.setState({\r\n            refresh: !this.state.refresh,\r\n        });\r\n    }\r\n\r\n    confirmDelete() {\r\n        this.setState({\r\n            modal: true, modalTitle: 'Confirmation', modalText: <p>Click <strong><u>Delete</u></strong> to begin the process to remove this load testing engine</p>\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modal: false, modalTitle: null, modalText: null\r\n        });\r\n    }\r\n\r\n    taskCount(taskCount) {\r\n        this.setState({ taskCount: taskCount })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    };\r\n\r\n    componentWillUnmount() {\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const modal = (\r\n            <Modal isOpen={this.state.modal}>\r\n                <ModalHeader>{this.state.modalTitle}</ModalHeader>\r\n                <ModalBody>\r\n                    {this.state.modalText}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={this.deleteLocust} size=\"sm\" color=\"danger\">Delete</Button>\r\n                    <Button onClick={this.closeModal} size=\"sm\">Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n\r\n        const manageLocustForm = (\r\n            <div>\r\n                <div className=\"box heading-box\">\r\n                    <h1>Manage {this.state.engine_name.charAt(0).toUpperCase() + this.state.engine_name.slice(1)}</h1>\r\n                    <Button size=\"sm\" onClick={this.confirmDelete} color=\"danger\">Delete</Button>\r\n                    <Button size=\"sm\" onClick={this.refresh}>Refresh</Button>\r\n                </div>\r\n                <Settings engineName={this.state.engine_name} refresh={this.state.refresh} taskCount={this.taskCount} />\r\n                <Tasks engineName={this.state.engine_name} refresh={this.state.refresh} taskCount={this.state.taskCount} />\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <form ref={this.form} onSubmit={e => e.preventDefault()}>\r\n                    {modal}\r\n                    <div>\r\n                        {this.state.isLoading ? <div className=\"loading\"><Spinner color=\"secondary\" /></div> : manageLocustForm}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(ManageLocust);\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n} from 'reactstrap';\r\nimport ManageLocust from './Locust/Locust'\r\n\r\n\r\nclass Manage extends React.Component {\r\n    intervalID;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            engine_name: this.props.match.params['engine'],\r\n            modal: false,\r\n            modalTitle: null,\r\n            modalText: null,\r\n        }\r\n        this.closeModal = this.closeModal.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    };\r\n\r\n    componentWillUnmount() {\r\n    };\r\n\r\n    notFoundModal() {\r\n        this.setState({\r\n            modal: true, modalTitle: 'Engine error', modalText: <p>No engine by the name of {this.state.engine_name} found</p>\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modal: false, modalTitle: null, modalText: null\r\n        });\r\n        this.props.history.push('/')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const manageForm = (\r\n            <div>\r\n                {(() => {\r\n                    switch (this.state.engine_name) {\r\n                        case 'locust':\r\n                            return (\r\n                                <ManageLocust engineName={this.state.engine_name} />\r\n                            );\r\n                        default:\r\n                            return (\r\n                                <Modal isOpen=\"true\">\r\n                                    <ModalHeader>Engine error</ModalHeader>\r\n                                    <ModalBody>\r\n                                        <p>No engine by the name of {this.state.engine_name} found</p>\r\n                                    </ModalBody>\r\n                                    <ModalFooter>\r\n                                        <Button onClick={this.closeModal} size=\"sm\">Ok</Button>\r\n                                    </ModalFooter>\r\n                                </Modal>\r\n                            );\r\n                    }\r\n                })()}\r\n            </div >\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                {manageForm}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Manage;\r\n","/*******************************************************************************\r\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Amazon Software License (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n *\r\n ********************************************************************************/\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAws } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPlusSquare, faSignOutAlt, faBars, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\n\r\n//Amplify\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport { withAuthenticator, AmplifyTheme } from 'aws-amplify-react';\r\n//import awsConfig from './aws_config'\r\n\r\n//Components\r\nimport Dashboard from './Components/Dashboard/Dashboard.js';\r\nimport LaunchLocust from './Components/Launch/LaunchLocust.js'\r\nimport Manage from './Components/Manage/Manage.js'\r\nimport '@aws-amplify/ui/dist/style.css';\r\n\r\ndeclare var awsConfig;\r\nAmplify.configure(awsConfig);\r\n//Amplify.Logger.LOG_LEVEL = 'DEBUG';\r\n\r\nconst loginTheme = {\r\n  sectionFooterSecondaryContent: {\r\n    ...AmplifyTheme.sectionFooterSecondaryContent,\r\n    display: \"none\"\r\n  }\r\n\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.noMatch = this.noMatch.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  noMatch({ location }) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          Error 404 Page not found: <code>{location.pathname}</code>\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  signOut() {\r\n    Auth.signOut();\r\n    window.location.reload();\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n\r\n          <Navbar color=\"dark\" dark fixed=\"top\" expand=\"md\">\r\n            <NavbarBrand href=\"/\"> <FontAwesomeIcon icon={faAws} size=\"lg\" color=\"#FF9900\" id=\"logo\" /> Distributed Load Testing</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse isOpen={!this.state.collapsed} navbar>\r\n              <Nav className=\"mr-auto\" navbar>\r\n                <NavItem>\r\n                  <Link to={'/dashboard'} className=\"nav-link\">\r\n                    <FontAwesomeIcon id=\"icon\" icon={faBars} /> Dashboard\r\n              </Link>\r\n                </NavItem>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                  <Nav className=\"ml-auto\" navbar>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                      <DropdownToggle nav caret>\r\n                        <FontAwesomeIcon id=\"icon\" icon={faPlusSquare} />  Launch engine\r\n                </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem>\r\n                          <Link to={{\r\n                            pathname: \"/launch/locust\",\r\n                            state: { engine_type: \"locust\" }\r\n                          }}>\r\n                            Locust\r\n                          </Link>\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </Nav>\r\n                </Collapse>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Link to=\"\" onClick={this.signOut} className=\"nav-link\">\r\n                    <FontAwesomeIcon id=\"icon\" icon={faSignOutAlt} /> Sign Out\r\n                  </Link>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <div className=\"main\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Dashboard} />\r\n              <Route path=\"/dashboard\" exact component={Dashboard} />\r\n              <Route path=\"/launch/locust\" exact component={LaunchLocust} />\r\n              <Route path=\"/manage/:engine\" exact component={Manage} />\r\n              <Route component={this.noMatch} />\r\n            </Switch>\r\n            <div className=\"footer\">\r\n              <p>For help please see the <a className=\"text-link\" href=\"https://github.com/melbourneit-es/int-terraform-aws-loadtesting\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\">\r\n                solution home page <FontAwesomeIcon size=\"sm\" icon={faExternalLinkAlt} />\r\n              </a></p>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//export default App;\r\nexport default withAuthenticator(App, false, [], null, loginTheme);\r\n","/*******************************************************************************\r\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \r\n *\r\n * Licensed under the Amazon Software License (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0    \r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n *\r\n ********************************************************************************/\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/*******************************************************************************\r\n * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved. \r\n *\r\n * Licensed under the Amazon Software License (the \"License\").\r\n * You may not use this file except in compliance with the License.\r\n * A copy of the License is located at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0    \r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed\r\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\r\n * express or implied. See the License for the specific language governing\r\n * permissions and limitations under the License.\r\n *\r\n ********************************************************************************/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}